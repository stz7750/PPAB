plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'store.stz7750'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	implementation 'org.springframework.boot:spring-boot-starter-websocket' //ws
	implementation 'log4j:log4j:1.2.17' //Log4j
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.1'
	implementation 'org.springframework.boot:spring-boot-starter-mail' //email
	implementation 'org.springframework.boot:spring-boot-starter-aop' // aop
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation'org.springframework.boot:spring-boot-starter-security'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'
	testCompileOnly 'org.projectlombok:lombok:1.18.28'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	implementation 'com.google.code.gson:gson'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'

    // Mockito 의존성 추가 (모의 객체 사용을 위해 필요)
    testImplementation 'org.mockito:mockito-core:5.5.0'
    
    // Optional: Spring Boot 테스트 의존성 (Spring Boot 환경에서의 테스트를 위해 필요)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
